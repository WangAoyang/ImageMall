// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service;

namespace Service.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20190904073821_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Model.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityDays");

                    b.Property<string>("ActivityName");

                    b.Property<string>("Contact");

                    b.Property<string>("ContactType");

                    b.Property<DateTime>("Deadline");

                    b.Property<string>("Intro");

                    b.Property<string>("Journey");

                    b.Property<int>("Places");

                    b.Property<decimal>("Price");

                    b.Property<int>("Registered");

                    b.Property<string>("Starting");

                    b.Property<DateTime>("TravelTime");

                    b.Property<string>("Venue");

                    b.HasKey("Id");

                    b.ToTable("Activityset");
                });

            modelBuilder.Entity("Model.AddressInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Pid");

                    b.HasKey("Id");

                    b.ToTable("AddressInfoset");
                });

            modelBuilder.Entity("Model.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrencyType");

                    b.Property<int>("DictionariesId");

                    b.Property<string>("ShopName");

                    b.Property<int>("ShopNumber");

                    b.Property<int>("TypeInfoId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Applicationset");
                });

            modelBuilder.Entity("Model.Collect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MasterId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Collectset");
                });

            modelBuilder.Entity("Model.Dictionaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.ToTable("Dictionariesset");
                });

            modelBuilder.Entity("Model.DictionariesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DictionariesTypeset");
                });

            modelBuilder.Entity("Model.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EvaluateName");

                    b.Property<int>("Pid");

                    b.HasKey("Id");

                    b.ToTable("Evaluateset");
                });

            modelBuilder.Entity("Model.Indent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Currency");

                    b.Property<int>("CurrencyTypeId");

                    b.Property<int>("DictionariesId");

                    b.Property<string>("ShopName");

                    b.Property<int>("Surplus");

                    b.Property<int>("TypeInfoId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Indentset");
                });

            modelBuilder.Entity("Model.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InformationName");

                    b.Property<int>("InformationTypeId");

                    b.Property<int>("PictureId");

                    b.Property<decimal>("Price");

                    b.Property<int>("VerboseId");

                    b.HasKey("Id");

                    b.ToTable("Informationset");
                });

            modelBuilder.Entity("Model.InformationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("informationName");

                    b.HasKey("Id");

                    b.ToTable("InformationTypeset");
                });

            modelBuilder.Entity("Model.Integral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("IntegralName");

                    b.Property<int>("NeedIntegral");

                    b.Property<decimal>("OriginalPrice");

                    b.Property<string>("Particulars");

                    b.Property<int>("PictureId");

                    b.Property<int>("Sales");

                    b.Property<string>("Service");

                    b.Property<int>("Stock");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("Integralset");
                });

            modelBuilder.Entity("Model.Lease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Charges");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Information");

                    b.Property<string>("Linkman");

                    b.Property<string>("Particulars");

                    b.Property<string>("Phone");

                    b.Property<decimal>("Pledge");

                    b.Property<string>("ShopName");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("Leaseset");
                });

            modelBuilder.Entity("Model.MasterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrandId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DictionariesId");

                    b.Property<decimal>("MarketPrice");

                    b.Property<decimal>("MemberPrice");

                    b.Property<string>("Particulars");

                    b.Property<int>("PictureId");

                    b.Property<string>("ProductName");

                    b.Property<int>("Sales");

                    b.Property<string>("Service");

                    b.Property<int>("Surplus");

                    b.Property<string>("TypeInfo");

                    b.HasKey("Id");

                    b.ToTable("MasterInfoset");
                });

            modelBuilder.Entity("Model.MyBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpendIntegral");

                    b.Property<DateTime>("ExpendTime");

                    b.Property<int>("IntegralCount");

                    b.Property<string>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("MyBalanceset");
                });

            modelBuilder.Entity("Model.MyIntegral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpendIntegral");

                    b.Property<DateTime>("ExpendTime");

                    b.Property<int>("IntegralCount");

                    b.Property<string>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("MyIntegralset");
                });

            modelBuilder.Entity("Model.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BreviaryUrl");

                    b.Property<int>("MasterId");

                    b.Property<string>("PictureUrl");

                    b.HasKey("Id");

                    b.ToTable("Pictureset");
                });

            modelBuilder.Entity("Model.Probation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("Deadline");

                    b.Property<int>("Integral");

                    b.Property<string>("Intro");

                    b.Property<decimal>("MarketPrice");

                    b.Property<decimal>("MemberPrice");

                    b.Property<string>("Particulars");

                    b.Property<int>("PictureId");

                    b.Property<string>("ShopName");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.ToTable("Probationset");
                });

            modelBuilder.Entity("Model.Search", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TypeInfoId");

                    b.HasKey("Id");

                    b.ToTable("Searchset");
                });

            modelBuilder.Entity("Model.Seckill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DictionariesId");

                    b.Property<DateTime>("EndTime");

                    b.Property<decimal>("MarketPrice");

                    b.Property<decimal>("MemberPrice");

                    b.Property<int>("Sales");

                    b.Property<string>("ShopName");

                    b.Property<int>("Surplus");

                    b.HasKey("Id");

                    b.ToTable("Seckillset");
                });

            modelBuilder.Entity("Model.Shopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Masterd");

                    b.Property<int>("Quantity");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Shoppingset");
                });

            modelBuilder.Entity("Model.Tourist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Currency");

                    b.Property<int>("CurrencyType");

                    b.Property<string>("TouristMessage");

                    b.Property<string>("TouristName");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Touristset");
                });

            modelBuilder.Entity("Model.TypeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Pid");

                    b.HasKey("Id");

                    b.ToTable("TypeInfoset");
                });

            modelBuilder.Entity("Model.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<int>("AddressId");

                    b.Property<int>("Age");

                    b.Property<decimal>("Balance");

                    b.Property<string>("Detailed");

                    b.Property<string>("Identity");

                    b.Property<int>("Integral");

                    b.Property<int>("PictureId");

                    b.Property<string>("Pwd");

                    b.Property<int>("Sex");

                    b.Property<string>("TrueName");

                    b.HasKey("Id");

                    b.ToTable("UserInfoset");
                });

            modelBuilder.Entity("Model.Verbose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contact");

                    b.Property<string>("Phone");

                    b.Property<string>("VerboseName");

                    b.HasKey("Id");

                    b.ToTable("Verboseset");
                });
#pragma warning restore 612, 618
        }
    }
}
